var srcFolder = null;srcFolder=Folder.selectDialog("Select folder with the source PSD files:");if(srcFolder==null) {    alert("No folder specified, cancelling the script");} else {    var files = srcFolder.getFiles("*.psd");    for(i=0;i<files.length;i++) {        var doc = app.open(files[i]);        $.writeln("Opening Smart Layers in PSD: "+doc.name);        openLayers(doc.layerSets);    }}function openLayers(layerNode) {    for (var i=0; i<layerNode.length; i++) {        openLayers(layerNode[i].layerSets);        for(var j=0; j < layerNode[i].artLayers.length; j++) {            var layer=layerNode[i].artLayers[j];            var old_name = layer.name;            layer.name+="_"+j;            //$.writeln(layer.name+' is a '+layer.kind);            if(layer.kind==LayerKind.SMARTOBJECT) {                openSmartObject(layer);                $.sleep(1000);            }            layer.name = old_name;        }    }}function openSmartObject (objectRef) {    var id3 = charIDToTypeID( "slct" );    var desc2 = new ActionDescriptor();    var id4 = charIDToTypeID( "null" );    var ref1 = new ActionReference();    var id5 = charIDToTypeID( "Lyr " );    ref1.putName( id5, objectRef.name );    desc2.putReference( id4, ref1 );    var id6 = charIDToTypeID( "MkVs" );    desc2.putBoolean( id6, false );    executeAction( id3, desc2 );    var id7 = stringIDToTypeID( "placedLayerEditContents" );    var desc3 = new ActionDescriptor();    executeAction( id7, desc3);}